import{_ as s,c as a,b as t,o as p}from"./app-B3Ymq__w.js";const e={};function l(c,n){return p(),a("div",null,n[0]||(n[0]=[t(`<h1 id="концепции-vue-модулеи" tabindex="-1"><a class="header-anchor" href="#концепции-vue-модулеи"><span>Концепции Vue модулей</span></a></h1><p>Storybook текущего прогресса доступен <a href="https://webkieth.github.io/blanc-ui/vue/" target="_blank" rel="noopener noreferrer">по ссылке</a>.</p><h3 id="установка-компонентов" tabindex="-1"><a class="header-anchor" href="#установка-компонентов"><span>Установка компонентов</span></a></h3><p>В пакете не содержится общего плагина глобальной регистрации всех компонентов, поскольку из коробки они не являются готовыми. Их можно использовать с базовыми стилями прямо на экранах интерфейса, но рекомендуется всё же на их основе сделать свои компоненты, в которых уже можно изолировать и установить свой CSS для каждого элемента.</p><blockquote><p>Стандартные стили компонентов написаны на <a href="https://vanilla-extract.style/" target="_blank" rel="noopener noreferrer">vanilla-extract</a>. Все модули css.ts также экспортируемы, поэтому при его использовании в проекте вам доступен <a href="https://vanilla-extract.style/documentation/style-composition" target="_blank" rel="noopener noreferrer">приём композиции</a> для расширения базовых стилей.</p></blockquote><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="index.ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string">&#39;blanc-ui/vue/css&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Однако вы ничем не ограничены - можно применять CSS Modules, tailwind и вообще всё что захотите. Все свойства стилей и их вариантов - это обычные классы, то есть, строки.</p><h4 id="cоздание-кнопки-на-базе-blanc-ui-c-tailwindcss" tabindex="-1"><a class="header-anchor" href="#cоздание-кнопки-на-базе-blanc-ui-c-tailwindcss"><span>Cоздание кнопки на базе Blanc UI c tailwindcss:</span></a></h4><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="MyButton.vue"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Icon <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;blanc-ui/vue&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> type ButtonProps <span class="token punctuation">,</span> type IconProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;blanc-ui/vue/types&#39;</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span></span>
<span class="line">  size <span class="token operator">=</span> <span class="token string">&#39;medium&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  variant <span class="token operator">=</span> <span class="token string">&#39;primary&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  icon</span>
<span class="line"><span class="token punctuation">}</span> <span class="token operator">=</span> defineProps<span class="token operator">&lt;</span><span class="token punctuation">{</span></span>
<span class="line">  icon<span class="token operator">?</span><span class="token operator">:</span> IconProps<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span></span>
<span class="line">  variant<span class="token operator">?</span><span class="token operator">:</span> <span class="token string">&#39;primary&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;outlined&#39;</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token operator">&amp;</span> Omit<span class="token operator">&lt;</span>ButtonProps<span class="token punctuation">,</span> <span class="token string">&#39;variant&#39;</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">const</span> emit <span class="token operator">=</span> defineEmits<span class="token operator">&lt;</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token function-variable function">click</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">e</span><span class="token operator">:</span> MouseEvent</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span></span>
<span class="line">    <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\`inline-flex items-center\`<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name">:variants</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{</span>
<span class="line">      &#39;primary&#39;: &#39;bg-blue-600 text-white hover:bg-blue-700&#39;,</span>
<span class="line">      &#39;outlined&#39;: &#39;border border-gray-300 text-gray-700 hover:border-gray-400 hover:text-gray-800&#39;,</span>
<span class="line">      &#39;small&#39;: &#39;py-1 px-2 text-sm&#39;,</span>
<span class="line">      &#39;medium&#39;: &#39;py-1.5 px-2.5&#39;,</span>
<span class="line">      &#39;large&#39;: &#39;py-2 px-3 text-lg&#39;</span>
<span class="line">    }<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name">:size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>size<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name">:variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>variant<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(e) =&gt; $emit(&#39;click&#39;, e)<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Icon</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>icon<span class="token punctuation">&#39;</span></span> <span class="token attr-name">:name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>icon<span class="token punctuation">&#39;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>small<span class="token punctuation">&#39;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>mr-2<span class="token punctuation">&#39;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="установка-иконок" tabindex="-1"><a class="header-anchor" href="#установка-иконок"><span>Установка иконок</span></a></h3><p>Чтобы в компонентах работал базовый набор иконок, нужно установить плагин их подгрузки.</p><div class="language-main.ts line-numbers-mode" data-highlighter="prismjs" data-ext="main.ts" data-title="main.ts"><pre><code><span class="line">import { IconifyPlugin } from &#39;blanc-ui/vue&#39;</span>
<span class="line">app.use(IconifyPlugin)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>По умолчанию используется из cdn <a href="https://cdn.jsdelivr.net/npm/remixicon@4.6.0/fonts/remixicon.symbol.svg&#39;" target="_blank" rel="noopener noreferrer">Remix SVG Sprite</a></p><h3 id="установка-плагинов" tabindex="-1"><a class="header-anchor" href="#установка-плагинов"><span>Установка плагинов</span></a></h3><p>Так же как и компоненты, плагины абстрактны и устанавливаются по отдельности. Они могут работать необязательно с компонентами Blanс UI. Вы можете с их помощью управлять любыми компонентами.</p><h4 id="пример-установки" tabindex="-1"><a class="header-anchor" href="#пример-установки"><span>Пример установки</span></a></h4><p>Для глобального провайда во всём проекте:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="index.ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> ViewLayersPlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;blanc-ui/vue&#39;</span></span>
<span class="line"><span class="token operator">...</span></span>
<span class="line">Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ViewLayersPlugin<span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">...</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Если вы хотите ограничить видимость плагина:</p><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="MyAwesomePage.vue"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> provide<span class="token punctuation">,</span> getCurrentInstance <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> EventBus<span class="token punctuation">,</span> $eventBus<span class="token punctuation">,</span> Notify<span class="token punctuation">,</span> $notify <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;blanc-ui/vue&#39;</span></span>
<span class="line">provide<span class="token operator">&lt;</span>EventBus<span class="token operator">&gt;</span><span class="token punctuation">(</span>$eventBus<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">EventBus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">provide<span class="token operator">&lt;</span>Notify<span class="token operator">&gt;</span><span class="token punctuation">(</span>$notify<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Notify</span><span class="token punctuation">(</span><span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  ...</span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyAwesomeComponent</span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">  ...</span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="MyAwesomeComponent.vue"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> inject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> $eventBus<span class="token punctuation">,</span> $notify <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;blanc-ui/vue&#39;</span></span>
<span class="line"><span class="token keyword">const</span> eventBus <span class="token operator">=</span> inject<span class="token operator">&lt;</span>EventBus<span class="token operator">&gt;</span><span class="token punctuation">(</span>$eventBus<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">const</span> notify <span class="token operator">=</span> inject<span class="token operator">&lt;</span>Notify<span class="token operator">&gt;</span><span class="token punctuation">(</span>$notify<span class="token punctuation">)</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21)]))}const i=s(e,[["render",l],["__file","index.html.vue"]]),u=JSON.parse('{"path":"/vue/","title":"Концепции Vue модулей","lang":"ru-RU","frontmatter":{},"headers":[{"level":3,"title":"Установка компонентов","slug":"установка-компонентов","link":"#установка-компонентов","children":[]},{"level":3,"title":"Установка иконок","slug":"установка-иконок","link":"#установка-иконок","children":[]},{"level":3,"title":"Установка плагинов","slug":"установка-плагинов","link":"#установка-плагинов","children":[]}],"git":{"updatedTime":1740650559000,"contributors":[{"name":"Bejoy","username":"Bejoy","email":"casperyourweb@gmail.com","commits":2,"url":"https://github.com/Bejoy"},{"name":"Bejoy","username":"Bejoy","email":"firekit13@gmail.com","commits":2,"url":"https://github.com/Bejoy"}]},"filePathRelative":"vue/readme.md"}');export{i as comp,u as data};
