import{_ as l,c,b as n,a as t,f as s,r as e,o as i,e as d}from"./app-B3Ymq__w.js";const r={};function u(k,a){const o=e("StructureBlock"),p=e("StructureScheme");return i(),c("div",null,[a[1]||(a[1]=n(`<h1 id="button" tabindex="-1"><a class="header-anchor" href="#button"><span>Button</span></a></h1><p><a href="https://webkieth.github.io/blanc-ui/vue/?path=/docs/components-button--docs" target="_blank" rel="noopener noreferrer">Раздел в storybook</a></p><h3 id="применение" tabindex="-1"><a class="header-anchor" href="#применение"><span>Применение</span></a></h3><p>Для сборки кнопки нужно импортировать её себе в компонент, расширив при необходимости её возмжности и внедрив свои стили. Базовый шаблон внедрения представлен ниже.</p><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="Button.vue"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>ts<span class="token punctuation">&#39;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> type ButtonProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;blanc-ui/vue&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> myButtonStyle<span class="token punctuation">,</span> myButtonVariants <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./styles.css&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> props <span class="token operator">=</span> defineProps<span class="token operator">&lt;</span>ButtonProps<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">const</span> emit <span class="token operator">=</span> defineEmits<span class="token operator">&lt;</span>ButtonEmitters<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span></span>
<span class="line">    <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myButtonStyle<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name">:variants</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myButtonVariants<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name">v-bind</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(e) =&gt; emit(&#39;click&#39;, e)<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="структура" tabindex="-1"><a class="header-anchor" href="#структура"><span>Структура</span></a></h3>`,6)),t(p,{info:{button:{style:"основной класснейм",variants:{"<variant>":"для variant свойства","<size>":"для size свойства",disabled:"для disabled свойства",active:"для active свойства",inGroup:"если кнопка в группе",first:"если кнопка первая в группе",last:"если кнопка первая в группе",middle:"если кнопка в середине группы","<variant>_disabled":"стили сочетания свойств variant с disabled","<variant>_active":"стили сочетания свойств variant с active","<variant>_first":" стили variant если кнопка первая в группе","<variant>_last":"стили variant если кнопка последняя в группе","<variant>_middle":"стили variant если кнопка в середине группы"}}}},{default:s(()=>[t(o,{class:"bg-blue-500",name:"button",width:180,height:60},{default:s(()=>a[0]||(a[0]=[d(" Button ")])),_:1})]),_:1}),a[2]||(a[2]=n('<h3 id="своиства" tabindex="-1"><a class="header-anchor" href="#своиства"><span>Свойства</span></a></h3><table><thead><tr><th>Свойство</th><th>Типы</th><th>default</th><th>Описание</th></tr></thead><tbody><tr><td><code>ref</code></td><td><code>HTMLButtonElement</code></td><td><code>null</code></td><td>Референс на DOM элемент</td></tr><tr><td><code>variant</code></td><td><code>primary, secondary, outlined, clean</code></td><td><code>primary</code></td><td>Вариант отображения дизайна</td></tr><tr><td><code>size</code></td><td><code>small, medium, large</code></td><td><code>medium</code></td><td>Размер</td></tr><tr><td><code>active</code></td><td><code>boolean</code></td><td><code>false</code></td><td>Состояние кнопки в прожатом действующем состоянии</td></tr><tr><td><code>disabled</code></td><td><code>boolean</code></td><td><code>false</code></td><td>Состояние кнопки в отключённом, недоступном для нажатия состоянии</td></tr><tr><td><code>groupKey</code></td><td><code>string, number, undefined</code></td><td><code>undefined</code></td><td>Ключ кнопки, нужен при применении в группе, для автоматической установки активного состояния, если у группы есть свойство value</td></tr></tbody></table><h3 id="слоты" tabindex="-1"><a class="header-anchor" href="#слоты"><span>Слоты</span></a></h3><table><thead><tr><th>Слот</th><th>Scope</th><th>Описание</th></tr></thead><tbody><tr><td><code>default</code></td><td><code>no</code></td><td>Базовый центральный слот</td></tr></tbody></table><h3 id="события" tabindex="-1"><a class="header-anchor" href="#события"><span>События</span></a></h3><table><thead><tr><th>Название</th><th>Аргументы</th><th>Описание</th></tr></thead><tbody><tr><td><code>onClick</code></td><td><code>MouseEvent</code></td><td>Клик по кнопке, не исполнится если установлен disabled</td></tr></tbody></table>',6))])}const v=l(r,[["render",u],["__file","index.html.vue"]]),h=JSON.parse('{"path":"/vue/components/button/","title":"Button","lang":"ru-RU","frontmatter":{},"headers":[{"level":3,"title":"Применение","slug":"применение","link":"#применение","children":[]},{"level":3,"title":"Структура","slug":"структура","link":"#структура","children":[]},{"level":3,"title":"Свойства","slug":"своиства","link":"#своиства","children":[]},{"level":3,"title":"Слоты","slug":"слоты","link":"#слоты","children":[]},{"level":3,"title":"События","slug":"события","link":"#события","children":[]}],"git":{"updatedTime":1740343128000,"contributors":[{"name":"Bejoy","username":"Bejoy","email":"casperyourweb@gmail.com","commits":1,"url":"https://github.com/Bejoy"},{"name":"Bejoy","username":"Bejoy","email":"firekit13@gmail.com","commits":1,"url":"https://github.com/Bejoy"}]},"filePathRelative":"vue/components/button/readme.md"}');export{v as comp,h as data};
